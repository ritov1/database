CREATE DATABASE school;

CREATE TABLE students (
    student_id SERIAL PRIMARY KEY,
    name VARCHAR(100),
    gpa NUMERIC(3, 2) DEFAULT 0.00
);

CREATE TABLE courses (
    course_id SERIAL PRIMARY KEY,
    course_name VARCHAR(100)
);

CREATE TABLE enrollments (
    enrollment_id SERIAL PRIMARY KEY,
    student_id INT REFERENCES students(student_id),
    course_id INT REFERENCES courses(course_id),
    grade NUMERIC(3, 2)
);


CREATE OR REPLACE FUNCTION update_gpa()
RETURNS TRIGGER AS $$
BEGIN
    -- Calculate the new GPA
    UPDATE students
    SET gpa = (
        SELECT ROUND(AVG(grade), 2)
        FROM enrollments
        WHERE student_id = NEW.student_id
    )
    WHERE student_id = NEW.student_id;
    
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER gpa_update_trigger
AFTER INSERT OR UPDATE ON enrollments
FOR EACH ROW
EXECUTE FUNCTION update_gpa();

INSERT INTO students (name) VALUES ('John Doe');
INSERT INTO students (name) VALUES ('Jane Smith');

INSERT INTO courses (course_name) VALUES ('Mathematics');
INSERT INTO courses (course_name) VALUES ('History');

INSERT INTO enrollments (student_id, course_id, grade) VALUES (1, 1, 3.5);
INSERT INTO enrollments (student_id, course_id, grade) VALUES (1, 2, 4.0);
INSERT INTO enrollments (student_id, course_id, grade) VALUES (2, 1, 2.8);

SELECT * FROM students;
